[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.3 (Oracle Corporation Java 1.8.0_71)
[debug]       Load.loadUnit: plugins took 149.254272ms
[debug]       Load.loadUnit: defsScala took 0.871528ms
[debug] [Loading] Scanning directory /home/hdsaad/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/hdsaad/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 85.452659 ms
[debug]           Load.resolveProject(global-plugins) took 96.207265ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/hdsaad/.sbt/1.0/plugins, plugins: List(<none>))) took 507.68834ms
[debug] [Loading] Done in /home/hdsaad/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 621.481224ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.767356ms
[debug]     Load.loadUnit(file:/home/hdsaad/.sbt/1.0/plugins/, ...) took 800.286773ms
[debug]   Load.apply: load took 1160.371671ms
[debug]   Load.apply: resolveProjects took 11.620463ms
[debug]   Load.apply: finalTransforms took 129.93161ms
[debug]   Load.apply: config.delegates took 23.897962ms
[debug]   Load.apply: Def.make(settings)... took 783.891992ms
[debug]   Load.apply: structureIndex took 144.379157ms
[debug]   Load.apply: mkStreams took 2.894364ms
[info] loading global plugins from /home/hdsaad/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5653.384786ms
[debug]           Load.loadUnit: plugins took 54.944981ms
[debug]           Load.loadUnit: defsScala took 0.008224ms
[debug] [Loading] Scanning directory /home/hdsaad/Documents/simple/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/hdsaad/Documents/simple/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.466908 ms
[debug]               Load.resolveProject(simple-build) took 1.453034ms
[debug]             Load.loadTransitive: finalizeProject(Project(id simple-build, base: /home/hdsaad/Documents/simple/project, plugins: List(<none>))) took 4.646207ms
[debug] [Loading] Done in /home/hdsaad/Documents/simple/project, returning: (simple-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7.076049ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.022009ms
[debug]         Load.loadUnit(file:/home/hdsaad/Documents/simple/project/, ...) took 63.141152ms
[debug]       Load.apply: load took 69.384354ms
[debug]       Load.apply: resolveProjects took 0.312567ms
[debug]       Load.apply: finalTransforms took 11.303575ms
[debug]       Load.apply: config.delegates took 0.548731ms
[debug]       Load.apply: Def.make(settings)... took 237.656361ms
[debug]       Load.apply: structureIndex took 54.846493ms
[debug]       Load.apply: mkStreams took 0.004495ms
[info] loading project definition from /home/hdsaad/Documents/simple/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 701.087496ms
[debug]     Load.loadUnit: defsScala took 0.009403ms
[debug] [Loading] Scanning directory /home/hdsaad/Documents/simple
[debug]       Load.loadUnit: mkEval took 11.065121ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.432379 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 4.029815ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /home/hdsaad/Documents/simple, plugins: List(<none>))) took 8.74474ms
[debug] [Loading] Done in /home/hdsaad/Documents/simple, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3179.657221ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.482353ms
[debug]   Load.loadUnit(file:/home/hdsaad/Documents/simple/, ...) took 3890.285868ms
[debug] Load.apply: load took 3891.839737ms
[debug] Load.apply: resolveProjects took 0.12961ms
[debug] Load.apply: finalTransforms took 12.421128ms
[debug] Load.apply: config.delegates took 0.450191ms
[debug] Load.apply: Def.make(settings)... took 113.122687ms
[debug] Load.apply: structureIndex took 30.791011ms
[debug] Load.apply: mkStreams took 0.004381ms
[info] set current project to simple (in build file:/home/hdsaad/Documents/simple/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/hdsaad/.sbt/1.0/server/60fea4a1e5dad0a9d205/sock
[debug] Writing bsp connection file
[info] started sbt server
